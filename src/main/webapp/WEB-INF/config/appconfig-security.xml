<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security
		http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- Security configuration (login, logout) -->
    <http auto-config="true" use-expressions="true">
        <!-- Accesses -->
        <!-- All -->
        <intercept-url pattern="/" access="permitAll()"/>

        <!-- Admin -->
        <intercept-url pattern="/adminUsers" access="hasAnyRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/adminUsersSearch" access="hasAnyRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/adminAdminNew" access="hasAnyRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/adminStorekeeperNew" access="hasAnyRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/adminUsersEdit" access="hasAnyRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/adminUsersDelete" access="hasAnyRole('ROLE_ADMIN')"/>

        <intercept-url pattern="/adminCustomer" access="hasAnyRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/adminCustomerSearch" access="hasAnyRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/adminCustomerEdit" access="hasAnyRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/adminCustomerDelete" access="hasAnyRole('ROLE_ADMIN')"/>

        <intercept-url pattern="/adminBooks" access="hasAnyRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/adminBooksSearch" access="hasAnyRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/adminBookNew" access="hasAnyRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/adminBookEdit" access="hasAnyRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/adminBookDelete" access="hasAnyRole('ROLE_ADMIN')"/>

        <intercept-url pattern="/viewfeedback" access="hasAnyRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/oldfeedbacks" access="hasAnyRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/updfeedback" access="hasAnyRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/newfeedbacks" access="hasAnyRole('ROLE_ADMIN')"/>

        <!-- Consumer -->
        <intercept-url pattern="/cart" access="hasAnyRole('ROLE_CONSUMER')"/>
        <intercept-url pattern="/cart/update" access="hasAnyRole('ROLE_CONSUMER')"/>
        <intercept-url pattern="/cart/delete" access="hasAnyRole('ROLE_CONSUMER')"/>
        <intercept-url pattern="/cart/put" access="hasAnyRole('ROLE_CONSUMER')"/>

        <intercept-url pattern="/orders" access="hasAnyRole('ROLE_CONSUMER')"/>
        <intercept-url pattern="/order" access="hasAnyRole('ROLE_CONSUMER')"/>

        <intercept-url pattern="/wishlist" access="hasAnyRole('ROLE_CONSUMER')"/>

        <!-- Storekeeper -->
        <intercept-url pattern="/storekeeper" access="hasAnyRole('ROLE_STOREKEEPER', 'ROLE_ADMIN')"/>
        <!-- End Accesses -->

        <form-login login-page="/login" authentication-failure-url="/login?error"
                    login-processing-url="/j_spring_security_check" username-parameter="username" password-parameter="password"/>

        <logout logout-success-url="/" logout-url="/logout" />
    </http>
    <!-- End Security configuration (login, logout) -->

    <!-- Authentication configuration -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="userDetailsServiceImpl">
            <password-encoder ref="encoder"></password-encoder>
        </authentication-provider>
    </authentication-manager>
    <!-- End Authentication configuration -->

    <!-- Bean encoder -->
    <beans:bean id="encoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <beans:constructor-arg name="strength" value="11"/>
    </beans:bean>
    <!-- End Bean encoder -->
</beans:beans>